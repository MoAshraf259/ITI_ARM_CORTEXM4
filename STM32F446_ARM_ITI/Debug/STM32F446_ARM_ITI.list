
STM32F446_ARM_ITI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003f8  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005bc  080005c4  000105c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005bc  080005bc  000105c4  2**0
                  CONTENTS
  4 .ARM          00000000  080005bc  080005bc  000105c4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005bc  080005c4  000105c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005bc  080005bc  000105bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005c0  080005c0  000105c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  20000000  080005c4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  080005c4  00020028  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000105c4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a56  00000000  00000000  000105ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000039b  00000000  00000000  00011044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000e8  00000000  00000000  000113e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000b0  00000000  00000000  000114c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001439  00000000  00000000  00011578  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000120d  00000000  00000000  000129b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000476c  00000000  00000000  00013bbe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001832a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000280  00000000  00000000  0001837c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080005a4 	.word	0x080005a4

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080005a4 	.word	0x080005a4

08000204 <GPIO_EnablePeriClock>:

#include "stm32f446_gpio.h"
static void GPIO_EnablePeriClock(GPIO_Handle_t *pGPIO_Handle);

static void GPIO_EnablePeriClock(GPIO_Handle_t *pGPIO_Handle)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	if(pGPIO_Handle->pGPIOx==GPIOA)
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4a23      	ldr	r2, [pc, #140]	; (80002a0 <GPIO_EnablePeriClock+0x9c>)
 8000212:	4293      	cmp	r3, r2
 8000214:	d104      	bne.n	8000220 <GPIO_EnablePeriClock+0x1c>
	{
		RCC_EnablePeripheral(AHB1, AHB1_GPIOA);
 8000216:	2100      	movs	r1, #0
 8000218:	2001      	movs	r0, #1
 800021a:	f000 f901 	bl	8000420 <RCC_EnablePeripheral>
	else if(pGPIO_Handle->pGPIOx==GPIOG)
	{
		RCC_EnablePeripheral(AHB1, AHB1_GPIOG);
	}

}
 800021e:	e03a      	b.n	8000296 <GPIO_EnablePeriClock+0x92>
	else if(pGPIO_Handle->pGPIOx==GPIOB)
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a1f      	ldr	r2, [pc, #124]	; (80002a4 <GPIO_EnablePeriClock+0xa0>)
 8000226:	4293      	cmp	r3, r2
 8000228:	d104      	bne.n	8000234 <GPIO_EnablePeriClock+0x30>
		RCC_EnablePeripheral(AHB1, AHB1_GPIOB);
 800022a:	2101      	movs	r1, #1
 800022c:	2001      	movs	r0, #1
 800022e:	f000 f8f7 	bl	8000420 <RCC_EnablePeripheral>
}
 8000232:	e030      	b.n	8000296 <GPIO_EnablePeriClock+0x92>
	else if(pGPIO_Handle->pGPIOx==GPIOC)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a1b      	ldr	r2, [pc, #108]	; (80002a8 <GPIO_EnablePeriClock+0xa4>)
 800023a:	4293      	cmp	r3, r2
 800023c:	d104      	bne.n	8000248 <GPIO_EnablePeriClock+0x44>
		RCC_EnablePeripheral(AHB1, AHB1_GPIOC);
 800023e:	2102      	movs	r1, #2
 8000240:	2001      	movs	r0, #1
 8000242:	f000 f8ed 	bl	8000420 <RCC_EnablePeripheral>
}
 8000246:	e026      	b.n	8000296 <GPIO_EnablePeriClock+0x92>
	else if(pGPIO_Handle->pGPIOx==GPIOD)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	4a17      	ldr	r2, [pc, #92]	; (80002ac <GPIO_EnablePeriClock+0xa8>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d104      	bne.n	800025c <GPIO_EnablePeriClock+0x58>
		RCC_EnablePeripheral(AHB1, AHB1_GPIOD);
 8000252:	2103      	movs	r1, #3
 8000254:	2001      	movs	r0, #1
 8000256:	f000 f8e3 	bl	8000420 <RCC_EnablePeripheral>
}
 800025a:	e01c      	b.n	8000296 <GPIO_EnablePeriClock+0x92>
	else if(pGPIO_Handle->pGPIOx==GPIOE)
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a13      	ldr	r2, [pc, #76]	; (80002b0 <GPIO_EnablePeriClock+0xac>)
 8000262:	4293      	cmp	r3, r2
 8000264:	d104      	bne.n	8000270 <GPIO_EnablePeriClock+0x6c>
		RCC_EnablePeripheral(AHB1, AHB1_GPIOE);
 8000266:	2104      	movs	r1, #4
 8000268:	2001      	movs	r0, #1
 800026a:	f000 f8d9 	bl	8000420 <RCC_EnablePeripheral>
}
 800026e:	e012      	b.n	8000296 <GPIO_EnablePeriClock+0x92>
	else if(pGPIO_Handle->pGPIOx==GPIOF)
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4a0f      	ldr	r2, [pc, #60]	; (80002b4 <GPIO_EnablePeriClock+0xb0>)
 8000276:	4293      	cmp	r3, r2
 8000278:	d104      	bne.n	8000284 <GPIO_EnablePeriClock+0x80>
		RCC_EnablePeripheral(AHB1, AHB1_GPIOF);
 800027a:	2105      	movs	r1, #5
 800027c:	2001      	movs	r0, #1
 800027e:	f000 f8cf 	bl	8000420 <RCC_EnablePeripheral>
}
 8000282:	e008      	b.n	8000296 <GPIO_EnablePeriClock+0x92>
	else if(pGPIO_Handle->pGPIOx==GPIOG)
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	4a0b      	ldr	r2, [pc, #44]	; (80002b8 <GPIO_EnablePeriClock+0xb4>)
 800028a:	4293      	cmp	r3, r2
 800028c:	d103      	bne.n	8000296 <GPIO_EnablePeriClock+0x92>
		RCC_EnablePeripheral(AHB1, AHB1_GPIOG);
 800028e:	2106      	movs	r1, #6
 8000290:	2001      	movs	r0, #1
 8000292:	f000 f8c5 	bl	8000420 <RCC_EnablePeripheral>
}
 8000296:	bf00      	nop
 8000298:	3708      	adds	r7, #8
 800029a:	46bd      	mov	sp, r7
 800029c:	bd80      	pop	{r7, pc}
 800029e:	bf00      	nop
 80002a0:	40020000 	.word	0x40020000
 80002a4:	40020400 	.word	0x40020400
 80002a8:	40020800 	.word	0x40020800
 80002ac:	40020c00 	.word	0x40020c00
 80002b0:	40021000 	.word	0x40021000
 80002b4:	40021400 	.word	0x40021400
 80002b8:	40021800 	.word	0x40021800

080002bc <GPIO_Init>:
void GPIO_Init(GPIO_Handle_t *pGPIO_Handle)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	b084      	sub	sp, #16
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80002c4:	2300      	movs	r3, #0
 80002c6:	60fb      	str	r3, [r7, #12]

	GPIO_EnablePeriClock(pGPIO_Handle);
 80002c8:	6878      	ldr	r0, [r7, #4]
 80002ca:	f7ff ff9b 	bl	8000204 <GPIO_EnablePeriClock>

	if(pGPIO_Handle->GPIO_Config.Mode <=GPIO_MODE_Analog)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	791b      	ldrb	r3, [r3, #4]
 80002d2:	2b03      	cmp	r3, #3
 80002d4:	d81f      	bhi.n	8000316 <GPIO_Init+0x5a>
	{
		temp=(pGPIO_Handle->GPIO_Config.Mode << 2*pGPIO_Handle->GPIO_Config.PinNumber);
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	791b      	ldrb	r3, [r3, #4]
 80002da:	461a      	mov	r2, r3
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	7a1b      	ldrb	r3, [r3, #8]
 80002e0:	005b      	lsls	r3, r3, #1
 80002e2:	fa02 f303 	lsl.w	r3, r2, r3
 80002e6:	60fb      	str	r3, [r7, #12]
		pGPIO_Handle->pGPIOx->MODER &= ~(3<<2*pGPIO_Handle->GPIO_Config.PinNumber);
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	681a      	ldr	r2, [r3, #0]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	7a1b      	ldrb	r3, [r3, #8]
 80002f2:	005b      	lsls	r3, r3, #1
 80002f4:	2103      	movs	r1, #3
 80002f6:	fa01 f303 	lsl.w	r3, r1, r3
 80002fa:	43db      	mvns	r3, r3
 80002fc:	4619      	mov	r1, r3
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	400a      	ands	r2, r1
 8000304:	601a      	str	r2, [r3, #0]
		pGPIO_Handle->pGPIOx->MODER |=temp ;
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	6819      	ldr	r1, [r3, #0]
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	68fa      	ldr	r2, [r7, #12]
 8000312:	430a      	orrs	r2, r1
 8000314:	601a      	str	r2, [r3, #0]
	}
	else{
		//later
	}

	temp= pGPIO_Handle->GPIO_Config.OT_Type <<pGPIO_Handle->GPIO_Config.PinNumber;
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	795b      	ldrb	r3, [r3, #5]
 800031a:	461a      	mov	r2, r3
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	7a1b      	ldrb	r3, [r3, #8]
 8000320:	fa02 f303 	lsl.w	r3, r2, r3
 8000324:	60fb      	str	r3, [r7, #12]
	pGPIO_Handle->pGPIOx->OTYPER &= ~(1<<pGPIO_Handle->GPIO_Config.PinNumber);
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	685a      	ldr	r2, [r3, #4]
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	7a1b      	ldrb	r3, [r3, #8]
 8000330:	4619      	mov	r1, r3
 8000332:	2301      	movs	r3, #1
 8000334:	408b      	lsls	r3, r1
 8000336:	43db      	mvns	r3, r3
 8000338:	4619      	mov	r1, r3
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	400a      	ands	r2, r1
 8000340:	605a      	str	r2, [r3, #4]
	pGPIO_Handle->pGPIOx->OTYPER |= temp;
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	6859      	ldr	r1, [r3, #4]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	68fa      	ldr	r2, [r7, #12]
 800034e:	430a      	orrs	r2, r1
 8000350:	605a      	str	r2, [r3, #4]

	temp= pGPIO_Handle->GPIO_Config.SPEED <<2*pGPIO_Handle->GPIO_Config.PinNumber;
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	799b      	ldrb	r3, [r3, #6]
 8000356:	461a      	mov	r2, r3
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	7a1b      	ldrb	r3, [r3, #8]
 800035c:	005b      	lsls	r3, r3, #1
 800035e:	fa02 f303 	lsl.w	r3, r2, r3
 8000362:	60fb      	str	r3, [r7, #12]
	pGPIO_Handle->pGPIOx->OTYPER &= ~(3<<2*pGPIO_Handle->GPIO_Config.PinNumber);
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	685a      	ldr	r2, [r3, #4]
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	7a1b      	ldrb	r3, [r3, #8]
 800036e:	005b      	lsls	r3, r3, #1
 8000370:	2103      	movs	r1, #3
 8000372:	fa01 f303 	lsl.w	r3, r1, r3
 8000376:	43db      	mvns	r3, r3
 8000378:	4619      	mov	r1, r3
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	400a      	ands	r2, r1
 8000380:	605a      	str	r2, [r3, #4]
	pGPIO_Handle->pGPIOx->OTYPER |= temp;
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	6859      	ldr	r1, [r3, #4]
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	68fa      	ldr	r2, [r7, #12]
 800038e:	430a      	orrs	r2, r1
 8000390:	605a      	str	r2, [r3, #4]

	temp= pGPIO_Handle->GPIO_Config.PUPD <<pGPIO_Handle->GPIO_Config.PinNumber;
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	79db      	ldrb	r3, [r3, #7]
 8000396:	461a      	mov	r2, r3
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	7a1b      	ldrb	r3, [r3, #8]
 800039c:	fa02 f303 	lsl.w	r3, r2, r3
 80003a0:	60fb      	str	r3, [r7, #12]
	pGPIO_Handle->pGPIOx->PUPDR &= ~(1<<pGPIO_Handle->GPIO_Config.PinNumber);
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	68da      	ldr	r2, [r3, #12]
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	7a1b      	ldrb	r3, [r3, #8]
 80003ac:	4619      	mov	r1, r3
 80003ae:	2301      	movs	r3, #1
 80003b0:	408b      	lsls	r3, r1
 80003b2:	43db      	mvns	r3, r3
 80003b4:	4619      	mov	r1, r3
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	400a      	ands	r2, r1
 80003bc:	60da      	str	r2, [r3, #12]
	pGPIO_Handle->pGPIOx->PUPDR |= temp;
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	68d9      	ldr	r1, [r3, #12]
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	68fa      	ldr	r2, [r7, #12]
 80003ca:	430a      	orrs	r2, r1
 80003cc:	60da      	str	r2, [r3, #12]

	/*Alternate function later */
}
 80003ce:	bf00      	nop
 80003d0:	3710      	adds	r7, #16
 80003d2:	46bd      	mov	sp, r7
 80003d4:	bd80      	pop	{r7, pc}

080003d6 <GPIO_WriteToPin>:
void GPIO_WriteToPin(GPIO_RegDef_t *pGPIOx,uint8_t PinNumber,uint8_t value)
{
 80003d6:	b480      	push	{r7}
 80003d8:	b083      	sub	sp, #12
 80003da:	af00      	add	r7, sp, #0
 80003dc:	6078      	str	r0, [r7, #4]
 80003de:	460b      	mov	r3, r1
 80003e0:	70fb      	strb	r3, [r7, #3]
 80003e2:	4613      	mov	r3, r2
 80003e4:	70bb      	strb	r3, [r7, #2]
	if(value==DISABLE){
 80003e6:	78bb      	ldrb	r3, [r7, #2]
 80003e8:	2b00      	cmp	r3, #0
 80003ea:	d10a      	bne.n	8000402 <GPIO_WriteToPin+0x2c>
	pGPIOx->ODR &=~(1<<PinNumber);
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	695b      	ldr	r3, [r3, #20]
 80003f0:	78fa      	ldrb	r2, [r7, #3]
 80003f2:	2101      	movs	r1, #1
 80003f4:	fa01 f202 	lsl.w	r2, r1, r2
 80003f8:	43d2      	mvns	r2, r2
 80003fa:	401a      	ands	r2, r3
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	615a      	str	r2, [r3, #20]
	}
	else{
		pGPIOx->ODR |=(1<<PinNumber);
	}
}
 8000400:	e008      	b.n	8000414 <GPIO_WriteToPin+0x3e>
		pGPIOx->ODR |=(1<<PinNumber);
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	695b      	ldr	r3, [r3, #20]
 8000406:	78fa      	ldrb	r2, [r7, #3]
 8000408:	2101      	movs	r1, #1
 800040a:	fa01 f202 	lsl.w	r2, r1, r2
 800040e:	431a      	orrs	r2, r3
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	615a      	str	r2, [r3, #20]
}
 8000414:	bf00      	nop
 8000416:	370c      	adds	r7, #12
 8000418:	46bd      	mov	sp, r7
 800041a:	bc80      	pop	{r7}
 800041c:	4770      	bx	lr
	...

08000420 <RCC_EnablePeripheral>:

#endif
}

void RCC_EnablePeripheral(uint8_t BUS_ID,uint8_t PeripheralID)
{
 8000420:	b480      	push	{r7}
 8000422:	b083      	sub	sp, #12
 8000424:	af00      	add	r7, sp, #0
 8000426:	4603      	mov	r3, r0
 8000428:	460a      	mov	r2, r1
 800042a:	71fb      	strb	r3, [r7, #7]
 800042c:	4613      	mov	r3, r2
 800042e:	71bb      	strb	r3, [r7, #6]
	switch (BUS_ID){
 8000430:	79fb      	ldrb	r3, [r7, #7]
 8000432:	3b01      	subs	r3, #1
 8000434:	2b03      	cmp	r3, #3
 8000436:	d837      	bhi.n	80004a8 <RCC_EnablePeripheral+0x88>
 8000438:	a201      	add	r2, pc, #4	; (adr r2, 8000440 <RCC_EnablePeripheral+0x20>)
 800043a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800043e:	bf00      	nop
 8000440:	08000451 	.word	0x08000451
 8000444:	08000467 	.word	0x08000467
 8000448:	0800047d 	.word	0x0800047d
 800044c:	08000493 	.word	0x08000493
		case AHB1:
			RCC->AHB1ENR |=(1<<PeripheralID);
 8000450:	4b18      	ldr	r3, [pc, #96]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000454:	79ba      	ldrb	r2, [r7, #6]
 8000456:	2101      	movs	r1, #1
 8000458:	fa01 f202 	lsl.w	r2, r1, r2
 800045c:	4611      	mov	r1, r2
 800045e:	4a15      	ldr	r2, [pc, #84]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 8000460:	430b      	orrs	r3, r1
 8000462:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000464:	e021      	b.n	80004aa <RCC_EnablePeripheral+0x8a>

		case AHB2:
			RCC->AHB2ENR |=(1<<PeripheralID);
 8000466:	4b13      	ldr	r3, [pc, #76]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 8000468:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800046a:	79ba      	ldrb	r2, [r7, #6]
 800046c:	2101      	movs	r1, #1
 800046e:	fa01 f202 	lsl.w	r2, r1, r2
 8000472:	4611      	mov	r1, r2
 8000474:	4a0f      	ldr	r2, [pc, #60]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 8000476:	430b      	orrs	r3, r1
 8000478:	6353      	str	r3, [r2, #52]	; 0x34
			break;
 800047a:	e016      	b.n	80004aa <RCC_EnablePeripheral+0x8a>

		case APB1:
			RCC->APB1ENR |=(1<<PeripheralID);
 800047c:	4b0d      	ldr	r3, [pc, #52]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 800047e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000480:	79ba      	ldrb	r2, [r7, #6]
 8000482:	2101      	movs	r1, #1
 8000484:	fa01 f202 	lsl.w	r2, r1, r2
 8000488:	4611      	mov	r1, r2
 800048a:	4a0a      	ldr	r2, [pc, #40]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 800048c:	430b      	orrs	r3, r1
 800048e:	6413      	str	r3, [r2, #64]	; 0x40
			break;
 8000490:	e00b      	b.n	80004aa <RCC_EnablePeripheral+0x8a>

		case APB2:
			RCC->APB2ENR |=(1<<PeripheralID);
 8000492:	4b08      	ldr	r3, [pc, #32]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 8000494:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000496:	79ba      	ldrb	r2, [r7, #6]
 8000498:	2101      	movs	r1, #1
 800049a:	fa01 f202 	lsl.w	r2, r1, r2
 800049e:	4611      	mov	r1, r2
 80004a0:	4a04      	ldr	r2, [pc, #16]	; (80004b4 <RCC_EnablePeripheral+0x94>)
 80004a2:	430b      	orrs	r3, r1
 80004a4:	6453      	str	r3, [r2, #68]	; 0x44
				break;
 80004a6:	e000      	b.n	80004aa <RCC_EnablePeripheral+0x8a>

		default :
			break;
 80004a8:	bf00      	nop
	}



}
 80004aa:	bf00      	nop
 80004ac:	370c      	adds	r7, #12
 80004ae:	46bd      	mov	sp, r7
 80004b0:	bc80      	pop	{r7}
 80004b2:	4770      	bx	lr
 80004b4:	40023800 	.word	0x40023800

080004b8 <GPIO_MainInit>:
#include "stm32f446.h"

GPIO_Handle_t GPIO_MainHandle;

void GPIO_MainInit(void)
{
 80004b8:	b580      	push	{r7, lr}
 80004ba:	af00      	add	r7, sp, #0
	GPIO_MainHandle.pGPIOx=GPIOA;
 80004bc:	4b09      	ldr	r3, [pc, #36]	; (80004e4 <GPIO_MainInit+0x2c>)
 80004be:	4a0a      	ldr	r2, [pc, #40]	; (80004e8 <GPIO_MainInit+0x30>)
 80004c0:	601a      	str	r2, [r3, #0]
	GPIO_MainHandle.GPIO_Config.Mode=GPIO_MODE_OUTPUT;
 80004c2:	4b08      	ldr	r3, [pc, #32]	; (80004e4 <GPIO_MainInit+0x2c>)
 80004c4:	2201      	movs	r2, #1
 80004c6:	711a      	strb	r2, [r3, #4]
	GPIO_MainHandle.GPIO_Config.OT_Type=GPIO_OTYPE_PUSHPULL;
 80004c8:	4b06      	ldr	r3, [pc, #24]	; (80004e4 <GPIO_MainInit+0x2c>)
 80004ca:	2200      	movs	r2, #0
 80004cc:	715a      	strb	r2, [r3, #5]
	GPIO_MainHandle.GPIO_Config.SPEED=GPIO_SPEED_HIGH;
 80004ce:	4b05      	ldr	r3, [pc, #20]	; (80004e4 <GPIO_MainInit+0x2c>)
 80004d0:	2203      	movs	r2, #3
 80004d2:	719a      	strb	r2, [r3, #6]
	GPIO_MainHandle.GPIO_Config.PinNumber=5;
 80004d4:	4b03      	ldr	r3, [pc, #12]	; (80004e4 <GPIO_MainInit+0x2c>)
 80004d6:	2205      	movs	r2, #5
 80004d8:	721a      	strb	r2, [r3, #8]

	GPIO_Init(&GPIO_MainHandle);
 80004da:	4802      	ldr	r0, [pc, #8]	; (80004e4 <GPIO_MainInit+0x2c>)
 80004dc:	f7ff feee 	bl	80002bc <GPIO_Init>
}
 80004e0:	bf00      	nop
 80004e2:	bd80      	pop	{r7, pc}
 80004e4:	2000001c 	.word	0x2000001c
 80004e8:	40020000 	.word	0x40020000

080004ec <main>:

int main(void)
{
 80004ec:	b580      	push	{r7, lr}
 80004ee:	af00      	add	r7, sp, #0

	GPIO_MainInit();
 80004f0:	f7ff ffe2 	bl	80004b8 <GPIO_MainInit>

	GPIO_WriteToPin(GPIOA, 5, SET);
 80004f4:	2201      	movs	r2, #1
 80004f6:	2105      	movs	r1, #5
 80004f8:	4802      	ldr	r0, [pc, #8]	; (8000504 <main+0x18>)
 80004fa:	f7ff ff6c 	bl	80003d6 <GPIO_WriteToPin>
 80004fe:	2300      	movs	r3, #0
    /* Loop forever */
	//for(;;);
}
 8000500:	4618      	mov	r0, r3
 8000502:	bd80      	pop	{r7, pc}
 8000504:	40020000 	.word	0x40020000

08000508 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000508:	480d      	ldr	r0, [pc, #52]	; (8000540 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800050a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800050c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000510:	480c      	ldr	r0, [pc, #48]	; (8000544 <LoopForever+0x6>)
  ldr r1, =_edata
 8000512:	490d      	ldr	r1, [pc, #52]	; (8000548 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000514:	4a0d      	ldr	r2, [pc, #52]	; (800054c <LoopForever+0xe>)
  movs r3, #0
 8000516:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000518:	e002      	b.n	8000520 <LoopCopyDataInit>

0800051a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800051a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800051c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800051e:	3304      	adds	r3, #4

08000520 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000520:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000522:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000524:	d3f9      	bcc.n	800051a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000526:	4a0a      	ldr	r2, [pc, #40]	; (8000550 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000528:	4c0a      	ldr	r4, [pc, #40]	; (8000554 <LoopForever+0x16>)
  movs r3, #0
 800052a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800052c:	e001      	b.n	8000532 <LoopFillZerobss>

0800052e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800052e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000530:	3204      	adds	r2, #4

08000532 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000532:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000534:	d3fb      	bcc.n	800052e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000536:	f000 f811 	bl	800055c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800053a:	f7ff ffd7 	bl	80004ec <main>

0800053e <LoopForever>:

LoopForever:
  b LoopForever
 800053e:	e7fe      	b.n	800053e <LoopForever>
  ldr   r0, =_estack
 8000540:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000544:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000548:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800054c:	080005c4 	.word	0x080005c4
  ldr r2, =_sbss
 8000550:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000554:	20000028 	.word	0x20000028

08000558 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000558:	e7fe      	b.n	8000558 <ADC_IRQHandler>
	...

0800055c <__libc_init_array>:
 800055c:	b570      	push	{r4, r5, r6, lr}
 800055e:	4d0d      	ldr	r5, [pc, #52]	; (8000594 <__libc_init_array+0x38>)
 8000560:	4c0d      	ldr	r4, [pc, #52]	; (8000598 <__libc_init_array+0x3c>)
 8000562:	1b64      	subs	r4, r4, r5
 8000564:	10a4      	asrs	r4, r4, #2
 8000566:	2600      	movs	r6, #0
 8000568:	42a6      	cmp	r6, r4
 800056a:	d109      	bne.n	8000580 <__libc_init_array+0x24>
 800056c:	4d0b      	ldr	r5, [pc, #44]	; (800059c <__libc_init_array+0x40>)
 800056e:	4c0c      	ldr	r4, [pc, #48]	; (80005a0 <__libc_init_array+0x44>)
 8000570:	f000 f818 	bl	80005a4 <_init>
 8000574:	1b64      	subs	r4, r4, r5
 8000576:	10a4      	asrs	r4, r4, #2
 8000578:	2600      	movs	r6, #0
 800057a:	42a6      	cmp	r6, r4
 800057c:	d105      	bne.n	800058a <__libc_init_array+0x2e>
 800057e:	bd70      	pop	{r4, r5, r6, pc}
 8000580:	f855 3b04 	ldr.w	r3, [r5], #4
 8000584:	4798      	blx	r3
 8000586:	3601      	adds	r6, #1
 8000588:	e7ee      	b.n	8000568 <__libc_init_array+0xc>
 800058a:	f855 3b04 	ldr.w	r3, [r5], #4
 800058e:	4798      	blx	r3
 8000590:	3601      	adds	r6, #1
 8000592:	e7f2      	b.n	800057a <__libc_init_array+0x1e>
 8000594:	080005bc 	.word	0x080005bc
 8000598:	080005bc 	.word	0x080005bc
 800059c:	080005bc 	.word	0x080005bc
 80005a0:	080005c0 	.word	0x080005c0

080005a4 <_init>:
 80005a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005a6:	bf00      	nop
 80005a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005aa:	bc08      	pop	{r3}
 80005ac:	469e      	mov	lr, r3
 80005ae:	4770      	bx	lr

080005b0 <_fini>:
 80005b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b2:	bf00      	nop
 80005b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005b6:	bc08      	pop	{r3}
 80005b8:	469e      	mov	lr, r3
 80005ba:	4770      	bx	lr
